#include<iostream>
#include<queue>
using namespace std;


pair<int,pair<int,int>> bfs(char c[1000][1000],int x,int y,int a,int b,bool v[1000][1000],int val[1000][1000])
{
	queue<pair<int,pair<int,int>>> q;
	q.push(make_pair(0,make_pair(x,y)));
	pair<int,pair<int,int>> m=make_pair(0,make_pair(x,y));
	while(!q.empty())
	{
		int x1=q.front().second.first;
		int y1=q.front().second.second;
	//	cout<<x1<<" "<<y1<<endl;
		q.pop();
		v[x1][y1]=true;	
		for(int i=-1;i<=1;i++)
		{
			for(int j=-1;j<=1;j++)
			{
				if(i*j==0 && i!=j && x1+i<a && x1+i>=0 && y1+j<b &&y1+b>=0)
				{
					if(v[x1+i][y1+j]==false && c[x1+i][y1+j]=='.')
					{
						val[x1+i][y1+j]=val[x1][y1]+1;
						q.push(make_pair(val[x1+i][y1+j],make_pair(x1+i,y1+j)));
						if(val[x1+i][y1+j]>m.first)
						{
							m=make_pair(val[x1+i][y1+j],make_pair(x1+i,y1+j));
						}
					}
				}
			}
		}
	}
	return m;
}


int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int a,b;
		cin>>b>>a;
		int x1,y1;
		char x[1000][1000];
		bool v[1000][1000];
		int val[1000][1000];
		for(int i=0;i<a;i++)
		{
			for(int j=0;j<b;j++)
			{
				cin>>x[i][j];
				v[i][j]=false;
				val[i][j]=0;
				if(x[i][j]=='.')
				{
					x1=i;
					y1=j;
				}
			}
		}
	//	cout<<x1<<" "<<y1<<endl;
		pair<int,pair<int,int>> p=bfs(x,x1,y1,a,b,v,val);
		for(int i=0;i<a;i++)
		{
			for(int j=0;j<b;j++)
			{
				val[i][j]=0;
				v[i][j]=false;
				
			}
		}
	//	cout<<p.first<<" "<<p.second.first<<" "<<p.second.second<<endl;
		p=bfs(x,p.second.first,p.second.second,a,b,v,val);
		cout<<"Maximum rope length is "<<p.first<<"."<<endl;
	}
}